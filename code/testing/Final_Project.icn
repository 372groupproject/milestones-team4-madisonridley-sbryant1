



procedure main()
  begin_time := &time
  numbers_list := get_numbers()
  sorted_numbers := []
  list_size := integer(*numbers_list)

  start_time := &time
  #write(integer(*numbers_list))

  quick_sort(numbers_list, 1, list_size)

  end_time := &time
  write("Sorting Time")
  write(end_time-start_time, " milliseconds")
  write("Run time")
  write(end_time-begin_time, " milliseconds")

  #every i := 0 to *numbers_list do
  #  write(numbers_list[i])

end

procedure get_numbers()
  numbers_file := open("Numbers.txt")
  numbers_list := []
  while line := read(numbers_file) do
    numbers_list := numbers_list ||| [integer(line)]
  return numbers_list

end

procedure quick_sort(numbers_list, low, high)

    if low < high then {
        index := quick_sort_helper(numbers_list, low, high)
        quick_sort(numbers_list, low, index - 1)
        quick_sort(numbers_list, index + 1, high)
        }

end

procedure quick_sort_helper(numbers_list, low, high)


  pivot := numbers_list[high]
  index := low - 1

  i := low

  while i <= (high - 1) do {
    if (numbers_list[i] < pivot) then {

        index +:= 1

        temp1 := numbers_list[index]
        numbers_list[index] := numbers_list[i]
        numbers_list[i] := temp1
        }

    i +:= 1
  }

  temp2 := numbers_list[index + 1]
  numbers_list[index + 1] := numbers_list[high]
  numbers_list[high] := temp2

  return index + 1
end
